name: Terraform Deploy and PR

on:
  push:
    branches:
      - slack  # Trigger this workflow only when pushing to the `slack` branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Install dependencies
        run: |
          terraform init

      - name: Set AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV

      - name: Apply Terraform
        id: terraform_apply
        run: |
          terraform apply -auto-approve
          
      - name: Send Slack Notification
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ "${{ steps.terraform_apply.outcome }}" == "success" ]; then
            STATUS="success"
            MESSAGE="Terraform deployment completed successfully!"
          else
            STATUS="failure"
            MESSAGE="Terraform deployment failed!"
          fi
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"Task Status: $STATUS\n$MESSAGE\"
          }" $SLACK_WEBHOOK_URL

      # Step to install GitHub CLI
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh

      # Step to authenticate GitHub CLI
      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      # Step to create Pull Request to Main Branch if Terraform Apply is successful
      - name: Create Pull Request to Main Branch
        if: success()  # This step will run only if the previous steps succeeded
        run: |
          PR_TITLE="Automated PR: Terraform Deployment"
          PR_BODY="This pull request merges the latest changes from the slack branch after a successful Terraform deployment."
          gh pr create --title "$PR_TITLE" --body "$PR_BODY" --base main --head slack

